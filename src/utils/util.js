const response = require('../constants/response.constants.js');
const formatter = require('./formatter.js');

module.exports = {

    // Returns a list of elements in the baseList but not in the
    // secondaryList
    listDifference : (baseList, secondaryList) => {
        result = [];

        if (secondaryList === undefined) {
            return baseList;
        }
        
        for (let i = 0; i < baseList.length; i++) {
            if (!secondaryList.includes(baseList[i])) {
                result.push(baseList[i]);
            }
        }

        return result;
    },

    handleError : (err, res) => {
        // Check if message is already in the form of a standard reponse
        if (err.msg === undefined) {
            // Standard unhandled errors
            if (err.message !== undefined) {
                err = formatter.formatResponse(err.message, null, response.GENERIC_SERVER_ERROR);
            }
            // Specific not found error generated by the ORM
            else if (err instanceof String && err.includes('not be found')) {
                err = formatter.formatResponse(err, null, response.NOT_FOUND);
            }
            // All other cases
            else {
                err = formatter.formatResponse(err, null, response.GENERIC_SERVER_ERROR);
            }
        }

        // Check if status code is present
        if (err.status !== undefined) {
            res.status(err.status).json(err);
        }
        else {
            res.status(response.GENERIC_SERVER_ERROR).json(err);
        }
    }
};
